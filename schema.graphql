# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Customer {
    email: String
    firstName: String
    id: ID!
    lastName: String
    orders: [Order]
}

type Mutation {
    " Create a new product in the system."
    createProduct(input: ProductInput): Product
    " Delete a product in the system."
    deleteProduct(id: Int): Boolean
    " Update an existing product in the system."
    updateProduct(input: ProductInput): Product
}

type Order {
    customer: Customer
    id: ID!
    orderedOn: Date
    product: Product
    qty: Int
    status: OrderStatus
}

" Objects"
type Product {
    desc: String
    id: ID!
    title: String
}

" Root Operations"
type Query {
    " List all customers in the system."
    allCustomers: [Customer]
    " List all orders in the system."
    allOrders: [Order]
    " List all products in the system."
    allProducts: [Product]
    " Find all reviews in the system."
    allReviews: [Review]
    " Find a customer by their last name."
    findCustomerByLastName(last: String): Customer
    " Find an order by order id."
    getOrder(id: ID): Order
    " Get a single product by the product id."
    getProduct(id: ID): Product
    " Find a review by the review id."
    getReview(id: ID): Review
}

type Review {
    content: String
    customer: Customer!
    id: ID!
    product: Product!
    status: ReviewStatus
}

enum OrderStatus {
    CANCELED
    DELIVERED
    ORDERED
    PENDING
    SHIPPED
}

enum ReviewStatus {
    APPROVED
    DECLINED
    PENDING
}

"An RFC-3339 compliant Full Date Scalar"
scalar Date

"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

" Inputs"
input ProductInput {
    desc: String
    id: Int
    title: String
}
